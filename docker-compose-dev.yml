version: '3'

services:
  php:
    container_name: ${APP_NAME}_php
    build:
      context: docker/php
    volumes:
      - ./:/var/www:delegated
    environment:
      - CONTAINER_ROLE=php-fpm
      - APP_ENV=${APP_ENV}
    depends_on:
      - database
      - redis
    networks:
      - application

  redis:
    container_name: ${APP_NAME}_redis
    image: redis
    ports:
      - 6379:6379
    volumes:
      - redis:/data
    networks:
      - application

  nginx:
    container_name: ${APP_NAME}_nginx
    build:
      context: docker/nginx
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    ports:
      - 80:80
    depends_on:
      - php
    networks:
      - application

  database:
    container_name: ${APP_NAME}_database
    image: postgres:12
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASS: ${DB_PASSWORD}
      POSTGRES_DBNAME: ${DB_DATABASE}
    volumes:
      - ./docker/postgres/datadir:/var/lib/postgresql/data
    networks:
      - application

  scheduler:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: ${APP_NAME}_scheduler
    networks:
      - application
    depends_on:
      - php
    volumes:
      - ./:/var/www
    environment:
      - CONTAINER_ROLE=scheduler
      - APP_ENV=${APP_ENV}
    restart: always

  worker:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: ${APP_NAME}_worker
    networks:
      - application
    depends_on:
      - php
      - redis
    volumes:
      - ./:/var/www
      - ./docker/php/supervisord.conf:/etc/supervisord.conf
    environment:
      - CONTAINER_ROLE=worker
      - APP_ENV=${APP_ENV}
    restart: always
networks:
  application:
    driver: bridge
volumes:
  redis:
    driver: "local"
